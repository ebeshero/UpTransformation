<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html
  SYSTEM "about:legacy-compat">
<html xmlns="http://www.w3.org/1999/xhtml"><head><title>Schedule</title><link rel="stylesheet" type="text/css" href="style.css"/><style type="text/css">
                    body {
                        line-height: 1.25em;
                    }
                    section &gt; ul &gt; li &gt; ol {
                        display: block;
                    }
                    button {
                        background-color: lightcyan;
                    }</style><script type="text/javascript" src="schedule.js">/**/</script></head><body><h1>Schedule</h1><p><button id="expand">Expand all</button> | <button id="collapse">Collapse
                        all</button></p>
    <section>
        <h2>Monday, June 11: XPath</h2>
        <section><h3>Introduction to XPath in eXist-db (10:00 a.m.–12:00 p.m.)</h3><ul><li>Getting started (20 minutes)<ol>
                    <li>Open <a href="http://newtfire.org:8338/exist/apps/eXide/index.html">http://newtfire.org:8338/exist/apps/eXide/index.html</a> (or
                        eXide within eXist-db on your own laptop, if you’ve installed it), click
                        “New XQuery”, and erase all content in the editing window. You’ll type your
                        XPath in the editing window and run it with the “Eval” button.</li>
                    <li>Learning XPath (and other languages, including XSLT, XQuery, Schematron)
                        means learning the:<ol>
                            <li>Vocabulary (e.g., the division operator in XPath is <code>div</code><a href="https://www.w3.org/TR/xpath-31/#id-arithmetic"><sup>⬀</sup></a>,
                                not <code>/</code>)</li>
                            <li>Syntax (e.g., in XPath <em>conditional expressions</em>,
                                the <code>if</code><a href="https://www.w3.org/TR/xpath-31/#doc-xpath31-IfExpr"><sup>⬀</sup></a> test must be parenthesized and an <code>else</code>
                                is required: <code>if (condition) then 1 else ()</code>)</li>
                            <li>Function library (e.g., <code>string-length()</code><a href="https://www.w3.org/TR/xpath-functions-31/#func-string-length"><sup>⬀</sup></a> and <code>count()</code><a href="https://www.w3.org/TR/xpath-functions-31/#func-count"><sup>⬀</sup></a> are functions, but there is no
                                    <code>length()</code> or <code>len()</code>)</li>
                        </ol></li>
                    <li>All XPath expressions return a <em>sequence</em>. Sequences may
                        contain <em>nodes</em> (elements, attributes, etc.), <em>atomic
                        </em>values (strings, numbers, etc.), or both. A sequence of one item is
                        nonetheless a sequence, as is an <em>empty sequence</em>. Nested
                        sequences are automatically flattened.</li>
                </ol></li><li>Simple XPath expressions (40 minutes)<ol>
                    <li>Strings and numbers (atomic values) are XPath expressions <ol>
                            <li><code>"Hi, Mom!"</code> (strings are enclosed in single or
                                double quotation marks—straight, not curly!)</li>
                            <li><code>1</code> (numbers are not enclosed in quotation
                                marks)</li>
                            <li><code>1.0</code> (What should this return? <em>lexical
                                    space</em> and <em>value space</em>)</li>
                        </ol></li>
                    <li>Arithmetic expressions are XPath expressions<ol>
                            <li><code>1 + 1</code></li>
                        </ol></li>
                    <li>XPath library functions (with no arguments) are XPath expressions<ol>
                            <li><code>current-date()</code><a href="https://www.w3.org/TR/xpath-functions-31/#func-current-date"><sup>⬀</sup></a></li>
                            <li><code>current-dateTime()</code><a href="https://www.w3.org/TR/xpath-functions-31/#func-current-dateTime"><sup>⬀</sup></a></li>
                        </ol></li>
                    <li>XPath library functions (with arguments) are XPath expressions <ol>
                            <li><code>upper-case('dhsi')</code><a href="https://www.w3.org/TR/xpath-functions-31/#func-upper-case"><sup>⬀</sup></a></li>
                            <li><code>concat('Curly', 'Larry', 'Moe')</code><a href="https://www.w3.org/TR/xpath-functions-31/#func-concat"><sup>⬀</sup></a></li>
                            <li><code>count(('Curly', 'Larry', 'Moe'))</code><a href="https://www.w3.org/TR/xpath-functions-31/#func-count"><sup>⬀</sup></a> (Why two sets of
                                parentheses?)</li>
                        </ol></li>
                    <li>Nested XPath library functions and operations are XPath expressions. Read
                        them from the inside out<ol>
                            <li><code>max((1 + 2, 10 div 5, 6 * 0.2))</code><a href="https://www.w3.org/TR/xpath-functions-31/#func-max"><sup>⬀</sup></a> (Remember those two sets
                                of parentheses?)</li>
                            <li><code>translate(upper-case('Hi, Mom!'),'AEIOU','xxxxx')</code><a href="https://www.w3.org/TR/xpath-functions-31/#func-translate"><sup>⬀</sup></a> (How
                                is this different from <code>upper-case(translate('Hi,
                                    Mom!','AEIOU','xxxxx'))</code>?)</li>
                            <li><code>format-dateTime(current-dateTime(),'[h].[m01][Pn] on [FNn],
                                    [D1o] [MNn]')</code><a href="https://www.w3.org/TR/xpath-functions-31/#func-format-dateTime"><sup>⬀</sup></a></li>
                        </ol></li>
                    <li>Nested functions are hard to read. Use the <em>arrow
                            operator</em><a href="https://www.w3.org/TR/xpath-31/#id-arrow-operator"><sup>⬀</sup></a> (<code>=&gt;</code>) instead<ol>
                            <li><code>upper-case('Hi, Mom!') =&gt;
                                    translate('AEIOU','xxxxx')</code></li>
                            <li><code>current-dateTime() =&gt; format-dateTime('[h].[m01][Pn] on
                                    [FNn], [D1o] [MNn]')</code></li>
                        </ol></li>
                    <li>Path expressions may span multiple lines (try it with the examples above),
                        that is, new-line and space have the same meaning</li>
                </ol></li><li>XPath in &lt;oXygen/&gt; (15 minutes)<ol>
                    <li>Launch &lt;oXygen/&gt; editor, hit Ctrl+u (Windows) or Cmd+u (MacOS),
                        enter <q>http://newtfire.org:8338/exist/apps/shakespeare/data/ham.xml</q>,
                        and hit <q>OK</q>. (Backup copy in
                            <q>https://raw.githubusercontent.com/ebeshero/UpTransformation/master/data/ham.xml</q>).</li>
                    <li>Set the dropdown in the upper left to <q>XPath 3.0</q>. Enter some XPath
                        expressions (from above, such as <code>1 + 1</code>). Limited to one line;
                        hit <q>Enter</q> to run the expression.</li>
                    <li>Go to Window → Show View → XPath/XQuery Builder. Set dropdown in upper
                        left to <q>XPath 3.0</q>. Enter some XPath expressions. May span multiple
                        lines; hit <q>Ctrl+Enter</q> (Windows) or Cmd+Enter (MacOS) to run, or click
                        the red right-pointed triangle.</li>
                </ol></li><li>XPath path expressions (25 minutes)<ol>
                    <li>Axes and context nodes</li>
                </ol></li><li>XPath path steps (20 minutes)</li></ul></section>
        <section><h3>Exploring document structures and data with XPath (1:15 p.m.–3:50 p.m.)</h3><ul><li>XPath functions (40 minutes)</li><li>XPath function signatures and cardinality (35 minutes)</li><li>XPath predicates (40 minutes)</li><li>Read and evaluate XML projects with XPath (40 minutes)</li></ul></section>
    </section>
    <section>
        <h2>Tuesday, June 12: XPath and XQuery</h2>
        <section><h3>Introduction to XPath in XQuery (9:30 a.m.–12:00 p.m.)</h3><ul><li>The seven types of nodes (30 minutes)</li><li>Neglected XPath axes (<code>ancestor::</code>, <code>preceding::</code> and
                        <code>following::</code>, <code>self::</code>, etc.) (30 minutes)</li><li>Don’t confuse XPath predicates with path steps (30 minutes)</li><li>Regex in XPath (30 minutes)</li><li>XPath in XQuery (30 minutes)</li></ul></section>
        <section><h3>XQuery flow control (1:15 p.m.–3:50 p.m.)</h3><ul><li>XPath expressions with functions and predicates (40 minutes)</li><li><code>for</code> loops; sequence and range variables (40 minutes)</li><li>FLWOR statements (XQuery) (40 minutes)</li><li>XPath predicates and the <code>where</code> statement (35 minutes)</li></ul></section>
    </section>
    <section>
        <h2>Wednesday, June 13: XPath and XSLT</h2>
        <section><h3>Introduction to XPath in XSLT (9:30 a.m.–12:00 p.m.)</h3><ul><li>XSLT overview (40 minutes)</li><li>It’s always a namespace issue: working with multiple namespaces (40 minutes)</li><li>XSLT template matching and context nodes (40 minutes)</li><li>Identity transformation (30 minutes)</li></ul></section>
        <section><h3>Pushing and pulling (1:15 p.m.–3:50 p.m.)</h3><ul><li><code>&lt;xsl:apply-templates&gt;</code> and the <code>@select</code>
                    attribute (40 minutes)</li><li>XSLT push and pull processing (40 minutes)</li><li>When to use <code>&lt;xsl:value-of&gt;</code> (40 minutes)</li><li>Comparing XSLT and XQuery (35 minutes)</li></ul></section>
    </section>
    <section>
        <h2>Thursday, June 14: XPath and Schematron</h2>
        <section><h3>Using Schematron to constrain your markup (9:30 a.m.–12:00 p.m.)</h3><ul><li>Schematron overview (60 minutes)</li><li>XPath functions practice (30 minutes)</li><li>Grouping; looping over distinct values, mapping back to the tree (60 minutes)</li></ul></section>
        <section><h3>Writing Schematron with XPath function (1:15 p.m.–3:50 p.m.)</h3><ul><li>Lab session (sample materials provided, or work with your own data) (155 minutes)</li></ul></section>
    </section>
    <section>
        <h2>Friday, June 15: Taking stock</h2>
        <section><h3>Review of XPath applications (9:30 a.m.–12:00 p.m.)</h3><ul><li>Review of XPath and its applications (90 minutes)</li><li>What next? (60 minutes)</li></ul></section>
    </section>
</body></html>