<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="schedule.rnc" type="application/relax-ng-compact-syntax"?>
<?xml-model href="schedule.sch" type="application/xml" schematypens="http://purl.oclc.org/dsdl/schematron"?>
<schedule>
    <day d="Monday, June 11">
        <title>XPath</title>
        <slot time="10:00:00">
            <title>Introduction to XPath in eXist-db</title>
            <act time="PT20M">
                <desc>Getting started</desc>
                <details>
                    <item>Open <link>http://newtfire.org:8338/exist/apps/eXide/index.html</link> (or
                        eXist-db on your own laptop, if you’ve installed it), click “New XQuery”,
                        and erase all content in the editing window. You’ll type your XPath in the
                        editing window and run it with the “Eval” button.</item>
                    <item>Learning XPath (and other languages, including XSLT, XQuery, Schematron)
                        means learning the:<examples>
                            <example>Vocabulary (e.g., the division operator in XPath is <code
                                    url="https://www.w3.org/TR/xpath-31/#id-arithmetic">div</code>,
                                not <code>/</code>)</example>
                            <example>Syntax (e.g., in XPath <emph>conditional expressions</emph>,
                                the <code url="https://www.w3.org/TR/xpath-31/#doc-xpath31-IfExpr"
                                    >if</code> test must be parenthesized and an <code>else</code>
                                is required: <code>if (condition) then 1 else ()</code>)</example>
                            <example>Function library (e.g., <code
                                    url="https://www.w3.org/TR/xpath-functions-31/#func-string-length"
                                    >string-length()</code> and <code
                                    url="https://www.w3.org/TR/xpath-functions-31/#func-count"
                                    >count()</code> are functions, but there is no
                                    <code>length()</code> or <code>len()</code>)</example>
                        </examples></item>
                    <item>All XPath expressions return a <emph>sequence</emph>. Sequences may
                        contain <emph>nodes</emph> (elements, attributes, etc.), <emph>atomic
                        </emph>values (strings, numbers, etc.), or both. A sequence of one item is
                        nonetheless a sequence, as is an <emph>empty sequence</emph>. Nested
                        sequences are automatically flattened.</item>
                </details>
            </act>
            <act time="PT40M">
                <desc>Simple XPath expressions</desc>
                <details>
                    <item>Strings and numbers (atomic values) are XPath expressions <examples>
                            <example><code>"Hi, Mom!"</code> (strings are enclosed in single or
                                double quotation marks—straight, not curly!)</example>
                            <example><code>1</code> (numbers are not enclosed in quotation
                                marks)</example>
                            <example><code>1.0</code> (What should this return? <emph>lexical
                                    space</emph> and <emph>value space</emph>)</example>
                        </examples></item>
                    <item>Arithmetic expressions are XPath expressions<examples>
                            <example><code>1 + 1</code></example>
                        </examples></item>
                    <item>XPath library functions (with no arguments) are XPath expressions<examples>
                            <example><code
                                    url="https://www.w3.org/TR/xpath-functions-31/#func-current-date"
                                    >current-date()</code></example>
                            <example><code
                                    url="https://www.w3.org/TR/xpath-functions-31/#func-current-dateTime"
                                    >current-dateTime()</code></example>
                        </examples></item>
                    <item>XPath library functions (with arguments) are XPath expressions <examples>
                            <example><code
                                    url="https://www.w3.org/TR/xpath-functions-31/#func-upper-case"
                                    >upper-case('dhsi')</code></example>
                            <example><code
                                    url="https://www.w3.org/TR/xpath-functions-31/#func-concat"
                                    >concat('Curly', 'Larry', 'Moe')</code></example>
                            <example><code
                                    url="https://www.w3.org/TR/xpath-functions-31/#func-count"
                                    >count(('Curly', 'Larry', 'Moe'))</code> (Why two sets of
                                parentheses?)</example>
                        </examples></item>
                    <item>Nested XPath library functions and operations are XPath expressions. Read
                        them from the inside out<examples>
                            <example><code url="https://www.w3.org/TR/xpath-functions-31/#func-max"
                                    >max((1 + 2, 10 div 5, 6 * 0.2))</code> (Remember those two sets
                                of parentheses?)</example>
                            <example><code
                                    url="https://www.w3.org/TR/xpath-functions-31/#func-translate"
                                    >translate()</code> and <code
                                    url="https://www.w3.org/TR/xpath-functions-31/#func-upper-case"
                                    >upper-case()</code>: <code>translate(upper-case('Hi,
                                    Mom!'),'AEIOU','xxxxx')</code> (How is this different from
                                    <code>upper-case(translate('Hi,
                                Mom!','AEIOU','xxxxx'))</code>?</example>
                            <example><code
                                    url="https://www.w3.org/TR/xpath-functions-31/#func-format-dateTime"
                                    >format-dateTime(current-dateTime(),'[h].[m01][Pn] on [FNn],
                                    [D1o] [MNn]')</code></example>
                        </examples></item>
                    <item>Nested functions are hard to read. Use the <emph
                            url="https://www.w3.org/TR/xpath-31/#id-arrow-operator">arrow
                            operator</emph> (<code>=&gt;</code>) instead<examples>
                            <example><code>upper-case('Hi, Mom!') =>
                                    translate('AEIOU','xxxxx')</code></example>
                            <example><code>current-dateTime() => format-dateTime('[h].[m01][Pn] on
                                    [FNn], [D1o] [MNn]')</code></example>
                        </examples></item>
                </details>
            </act>
            <act time="PT30M">
                <desc>XPath axes and context nodes </desc>
            </act>
            <act time="PT30M">
                <desc>XPath path steps</desc>
            </act>
        </slot>
        <slot time="13:15:00">
            <title>Exploring document structures and data with XPath</title>
            <act time="PT40M">
                <desc>XPath functions</desc>
            </act>
            <act time="PT35M">
                <desc>XPath function signatures and cardinality</desc>
            </act>
            <act time="PT40M">
                <desc>XPath predicates</desc>
            </act>
            <act time="PT40M">
                <desc>Read and evaluate XML projects with XPath</desc>
            </act>
        </slot>
    </day>
    <day d="Tuesday, June 12">
        <title>XPath and XQuery</title>
        <slot time="09:30:00">
            <title>Introduction to XPath in XQuery</title>
            <act time="PT30M">
                <desc>The seven types of nodes</desc>
            </act>
            <act time="PT30M">
                <desc>Neglected XPath axes (<code>ancestor::</code>, <code>preceding::</code> and
                        <code>following::</code>, <code>self::</code>, etc.)</desc>
            </act>
            <act time="PT30M">
                <desc>Don’t confuse XPath predicates with path steps</desc>
            </act>
            <act time="PT30M">
                <desc>Regex in XPath</desc>
            </act>
            <act time="PT30M">
                <desc>XPath in XQuery</desc>
            </act>
        </slot>
        <slot time="13:15:00">
            <title>XQuery flow control</title>
            <act time="PT40M">
                <desc>XPath expressions with functions and predicates</desc>
            </act>
            <act time="PT40M">
                <desc><code>for</code> loops; sequence and range variables</desc>
            </act>
            <act time="PT40M">
                <desc>FLWOR statements (XQuery)</desc>
            </act>
            <act time="PT35M">
                <desc>XPath predicates and the <code>where</code> statement</desc>
            </act>
        </slot>
    </day>
    <day d="Wednesday, June 13">
        <title>XPath and XSLT</title>
        <slot time="09:30:00">
            <title>Introduction to XPath in XSLT</title>
            <act time="PT40M">
                <desc>XSLT overview</desc>
            </act>
            <act time="PT40M">
                <desc>It’s always a namespace issue: working with multiple namespaces</desc>
            </act>
            <act time="PT40M">
                <desc>XSLT template matching and context nodes</desc>
            </act>
            <act time="PT30M">
                <desc>Identity transformation</desc>
            </act>
        </slot>
        <slot time="13:15:00">
            <title>Pushing and pulling</title>
            <act time="PT40M">
                <desc><code>&lt;xsl:apply-templates&gt;</code> and the <code>@select</code>
                    attribute</desc>
            </act>
            <act time="PT40M">
                <desc>XSLT push and pull processing</desc>
            </act>
            <act time="PT40M">
                <desc>When to use <code>&lt;xsl:value-of&gt;</code></desc>
            </act>
            <act time="PT35M">
                <desc>Comparing XSLT and XQuery</desc>
            </act>
        </slot>
    </day>
    <day d="Thursday, June 14">
        <title>XPath and Schematron</title>
        <slot time="09:30:00">
            <title>Using Schematron to constrain your markup</title>
            <act time="PT1H">
                <desc>Schematron overview</desc>
            </act>
            <act time="PT30M">
                <desc>XPath functions practice</desc>
            </act>
            <act time="PT1H">
                <desc>Grouping; looping over distinct values, mapping back to the tree</desc>
            </act>
        </slot>
        <slot time="13:15:00">
            <title>Writing Schematron with XPath function</title>
            <act time="PT2H35M">
                <desc>Lab session (sample materials provided, or work with your own data)</desc>
            </act>
        </slot>
    </day>
    <day d="Friday, June 15">
        <title>Taking stock</title>
        <slot time="09:30:00">
            <title>Review of XPath applications</title>
            <act time="PT1H30M">
                <desc>Review of XPath and its applications</desc>
            </act>
            <act time="PT1H">
                <desc>What next?</desc>
            </act>
        </slot>
    </day>
</schedule>
